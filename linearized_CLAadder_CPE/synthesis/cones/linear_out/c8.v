// c8.v generated by perl script

module c8 (code__7, b__3, a__3, n__24, n__23, n__22, n__21, n__20, n__19, n__18, n__17, n__16, n__15, n__14, n__13, n__12, n__11, n__10, b__0, b__1, a__1, n__2, n__1, n__0);
	output code__7;
	wire n2, code__3, t_24, N16, t_23, t_22, t_21, t_20, t_19, t_18, t_17, t_16, t_15, t_14, t_13, t_12, t_11, code__1, code__0, a__0, t_2, N14, t_1;
	input b__3, a__3, n__24, n__23, n__22, n__21, n__20, n__19, n__18, n__17, n__16, n__15, n__14, n__13, n__12, n__11, n__10, b__0, b__1, a__1, n__2, n__1, n__0;
  assign code__7 = code__3 ^ n2;
  assign code__3 = N16 ^ t_24;
  assign N16 = a__3 ^ b__3;
  assign t_24 = t_23 ^ n__24;
  assign t_23 = t_22 ^ n__23;
  assign t_22 = t_21 ^ n__22;
  assign t_21 = t_20 ^ n__21;
  assign t_20 = t_19 ^ n__20;
  assign t_19 = t_18 ^ n__19;
  assign t_18 = t_17 ^ n__18;
  assign t_17 = t_16 ^ n__17;
  assign t_16 = t_15 ^ n__16;
  assign t_15 = t_14 ^ n__15;
  assign t_14 = t_13 ^ n__14;
  assign t_13 = t_12 ^ n__13;
  assign t_12 = t_11 ^ n__12;
  assign t_11 = n__10 ^ n__11;
  assign n2 = code__0 ^ code__1;
  assign code__0 = a__0 ^ b__0;


  assign code__1 = N14 ^ t_2;
  assign N14 = a__1 ^ b__1;
  assign t_2 = t_1 ^ n__2;
  assign t_1 = n__0 ^ n__1;
endmodule
